{{ 'component-newsletter.css' | asset_url | stylesheet_tag }}
{{ 'newsletter-section.css' | asset_url | stylesheet_tag }}

{% liquid
  assign background_mobile = section.settings.section_bg_mobile
  assign background_desktop = section.settings.section_bg_desktop
%}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: 40px;
    padding-bottom: 40px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div
  class="newsletter"
  style="color: {{ section.settings.section_color }}">
  <div class="newsletter__wrapper page-width content-container isolate section-{{ section.id }}-padding">
    <div class="newsletter__content">
      {%- for block in section.blocks -%}
        {%- case block.type -%}
          {%- when '@app' -%}
            {% render block %}
          {%- when 'heading' -%}
            <h2
              class="newsletter__title inline-richtext }}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
              {% if settings.animations_reveal_on_scroll %}
                data-cascade
                style="--animation-order: {{ forloop.index }};"
              {% endif %}
            >
              {{ block.settings.heading }}
            </h2>
          {%- when 'paragraph' -%}
            <div
              class="newsletter__subheading rte{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
              {{ block.shopify_attributes }}
              {% if settings.animations_reveal_on_scroll %}
                data-cascade
                style="--animation-order: {{ forloop.index }};"
              {% endif %}
            >
              {{ block.settings.text }}
            </div>
        {%- endcase -%}
      {%- endfor -%}
    </div>
    <div class="newsletter__form">
      {%- for block in section.blocks -%}
        {%- case block.type -%}
          {%- when 'email_form' -%}
            {% form 'customer', class: 'newsletter-form' %}
              <input type="hidden" name="contact[tags]" value="newsletter">
              <div
                class="
                      newsletter-form__field-wrapper
                      {% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}
                      {%- if form.errors -%} form__has-errors{%- endif -%}
                      "
                {% if settings.animations_reveal_on_scroll %}
                  data-cascade
                  style="--animation-order: {{ forloop.index }};"
                {% endif %}
                >
                <div class="field">
                  <input
                    id="NewsletterForm--{{ section.id }}"
                    type="email"
                    name="contact[email]"
                    class="field__input"
                    value="{{ form.email }}"
                    aria-required="true"
                    autocorrect="off"
                    autocapitalize="off"
                    autocomplete="email"
                    {% if form.errors %}
                      autofocus
                      aria-invalid="true"
                      aria-describedby="Newsletter-error--{{ section.id }}"
                    {% elsif form.posted_successfully? %}
                      aria-describedby="Newsletter-success--{{ section.id }}"
                    {% endif %}
                    placeholder="{{ 'newsletter.label' | t }}"
                    required
                  >
                  <label class="field__label" for="NewsletterForm--{{ section.id }}">
                    {{ 'newsletter.label' | t }}
                  </label>
                  {%- if form.errors -%}
                    <small class="newsletter-form__message newsletter-form__message--error form__message" id="Newsletter-error--{{ section.id }}">
                      {{- form.errors.translated_fields.email | capitalize }}
                      {{ form.errors.messages.email -}}
                    </small>
                  {%- endif -%}
                </div>
                <div class="field field__submit">
                  <button
                    type="submit"
                    class="button"
                    name="commit"
                    id="Subscribe"
                    aria-label="{{ 'newsletter.button_label' | t }}"
                  >
                    {{ 'newsletter.button_label' | t }}
                  </button>
                </div>
              </div>
              {%- if form.posted_successfully? -%}
                <h3
                  class="newsletter-form__message newsletter-form__message--success form__message"
                  id="Newsletter-success--{{ section.id }}"
                  tabindex="-1"
                  autofocus
                >
                  {% render 'icon-success' -%}
                  {{- 'newsletter.success' | t }}
                </h3>
              {%- endif -%}
            {% endform %}
            
            
        {%- endcase -%}
      {%- endfor -%}
    </div>
  </div>
  
  <div class="newsletter__background page-width{% if section.settings.background_full_width == true %} newsletter__background--fullwidth{% endif %}">
    {% if background_mobile == blank or background_desktop == blank %}
      {{ 'hero-apparel-1' | placeholder_svg_tag: 'placeholder-svg' }}
    {% else %}
      <picture>
        <source srcset="{{ background_desktop | image_url: width: background_desktop.width }}" media="(min-width: 750px)" />
        {{
          background_mobile
          | image_url: width: background_mobile.width
          | image_tag:
            loading: 'lazy',
            width: background_mobile.width
        }}
      </picture>
    {% endif %}
  </div>
</div>

{% schema %}
{
  "name": "t:sections.newsletter.name",
  "tag": "section",
  "class": "section section-newsletter",
  "disabled_on": {
    "groups": ["header"]
  },
  "settings": [
    {
      "type": "image_picker",
      "id": "section_bg_mobile",
      "label": "t:sections.newsletter.settings.section_background.mobile.label"
    },
    {
      "type": "image_picker",
      "id": "section_bg_desktop",
      "label": "t:sections.newsletter.settings.section_background.desktop.label"
    },
    {
      "type": "color",
      "id": "section_color",
      "label": "t:sections.newsletter.settings.section_color.label",
      "default": "#363636"
    },
    {
      "type": "checkbox",
      "id": "background_full_width",
      "default": true,
      "label": "t:sections.newsletter.settings.background_full_width.label"
    },
    {
      "type": "paragraph",
      "content": "t:sections.newsletter.settings.paragraph.content"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 24
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 24
    }
  ],
  "blocks": [
    {
      "type": "heading",
      "name": "t:sections.newsletter.blocks.heading.name",
      "limit": 1,
      "settings": [
        {
          "type": "inline_richtext",
          "id": "heading",
          "default": "Sign up to receive news and special deals",
          "label": "t:sections.newsletter.blocks.heading.settings.heading.label"
        }
      ]
    },
    {
      "type": "paragraph",
      "name": "t:sections.newsletter.blocks.paragraph.name",
      "limit": 1,
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "default": "<p>We will never spam or sell your email.</p>",
          "label": "t:sections.newsletter.blocks.paragraph.settings.paragraph.label"
        }
      ]
    },
    {
      "type": "email_form",
      "name": "t:sections.newsletter.blocks.email_form.name",
      "limit": 1
    },
    {
      "type": "@app"
    }
  ],
  "presets": [
    {
      "name": "t:sections.newsletter.presets.name",
      "blocks": [
        {
          "type": "heading"
        },
        {
          "type": "paragraph"
        },
        {
          "type": "email_form"
        }
      ]
    }
  ]
}
{% endschema %}
